SET( CMAKE_SYSTEM_NAME Generic )
SET( CMAKE_SYSTEM_VERSION 1 )
SET( CMAKE_SYSTEM_PROCESSOR powerpc-eabi )

SET( DEVKITPPC $ENV{DEVKITPPC} )
SET( DEVKITPRO $ENV{DEVKITPRO} )

IF( NOT DEVKITPPC )
	MESSAGE( FATAL_ERROR "Please set DEVKITPPC in your environment" )
ENDIF( NOT DEVKITPPC )

SET( CMAKE_C_COMPILER ${DEVKITPPC}/bin/powerpc-eabi-gcc )
SET( CMAKE_CXX_COMPILER ${DEVKITPPC}/bin/powerpc-eabi-g++ )
SET( CMAKE_FIND_ROOT_PATH ${DEVKITPPC} )
SET( CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER )
SET( CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY )
SET( CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY )

SET( CMAKE_FIND_LIBRARY_PREFIXES lib )
SET( CMAKE_FIND_LIBRARY_SUFFIXES .a )
INCLUDE_DIRECTORIES( ${DEVKITPRO}/libogc/include )
INCLUDE_DIRECTORIES( ${DEVKITPRO}/portlibs/ppc/include )

SET( TARGET_SYSTEM_LIBRARIES ${DEVKITPRO}/libogc/lib/wii/libwiiuse.a
                             ${DEVKITPRO}/libogc/lib/wii/libbte.a
                             ${DEVKITPRO}/libogc/lib/wii/libogc.a 
                             m )

IF( NOT ELF2DOL_EXE )
	MESSAGE( STATUS "Looking for elf2dol" )
	FIND_PROGRAM( ELF2DOL_EXE elf2dol ${DEVKITPPC}/bin )
	IF( ELF2DOL_EXE )
		MESSAGE( STATUS "Looking for elf2dol -- ${ELF2DOL_EXE}" )
	ENDIF( ELF2DOL_EXE )
ENDIF( NOT ELF2DOL_EXE )

IF( ELF2DOL_EXE )
	MACRO( EXEFIXUP EXE_NAME )
		SET( FO ${CMAKE_CURRENT_BINARY_DIR}/${EXE_NAME}.dol )
		SET( FI ${CMAKE_CURRENT_BINARY_DIR}/${EXE_NAME} )
		ADD_CUSTOM_COMMAND(
				OUTPUT ${FO}
				COMMAND ${ELF2DOL_EXE}
				ARGS ${FI} ${FO}
				MAIN_DEPENDENCY ${FI} )
		GET_FILENAME_COMPONENT( TGT "${EXE_NAME}" NAME )
		ADD_CUSTOM_TARGET( "TargetDOL_${TGT}" ALL DEPENDS ${FO} VERBATIM )
		GET_DIRECTORY_PROPERTY( EXTRA_CLEAN_FILES ADDITIONAL_MAKE_CLEAN_FILES )
		SET_DIRECTORY_PROPERTIES(
				PROPERTIES
				ADDITIONAL_MAKE_CLEAN_FILES "${EXTRA_CLEAN_FILES};${FO}" )
		SET_SOURCE_FILES_PROPERTIES( ${FI} PROPERTIES GENERATED TRUE )
		SET_SOURCE_FILES_PROPERTIES( ${FO} PROPERTIES GENERATED TRUE )
	ENDMACRO( EXEFIXUP )
ENDIF( ELF2DOL_EXE )

